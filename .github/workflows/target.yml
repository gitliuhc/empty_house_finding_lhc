# This is a basic workflow to help you get started with Actions

name: check single house 

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      age:
        required: false
        type: number
        default: 18
    secrets:
      token:
        required: true

permissions:
  issues: write  # This line ensures the workflow has permission to create issues

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Hello, world! 👋 Привет, мир! こんにちは世界！
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Make request and capture response
        id: curl_request
        run: |
          echo "=================================="
          response=$(curl --silent curl --location "https://jhomes.to-kousya.or.jp/search/jkknet/service/akiyaJyokenDirect" --header "Content-Type: application/x-www-form-urlencoded" --data-urlencode "redirect=true" --data-urlencode "url=https%3A%2F%2Fjhomes.to-kousya.or.jp%2Fsearch%2Fjkknet%2Fservice%2FakiyaJyokenDirect" --data-urlencode "sen_flg=1" --data-urlencode "jutaku_name=30B330FC30B730E430CF30A430E030DF30C930EA30E830F330C130E830A630E1")
          # echo "::set-output name=status_code::$response"
          echo "----------------------------------"
          response2=$(echo "$response" | iconv -f SHIFT_JIS -t UTF-8)
          echo "----------------------------------2222"
          echo "$response2"
          echo "----------------------------------3333"
          echo "$response2" | grep -q "空室はございませんでした"
          # Check the exit status of grep to determine if the word was found
          if [ $? -eq 0 ]; then
            echo "AVAILABLE_HOUSE_FOUND=NO" >> $GITHUB_ENV
          else
            echo "AVAILABLE_HOUSE_FOUND=YES" >> $GITHUB_ENV
          fi
  

      - name: Create an Issue when found.
        if: ${{ env.AVAILABLE_HOUSE_FOUND == 'NO' }} 
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/other-template.md
          
      - name: just log when not found.
        if: ${{ env.AVAILABLE_HOUSE_FOUND == 'YES' }} 
        run: echo "No house found "

          
