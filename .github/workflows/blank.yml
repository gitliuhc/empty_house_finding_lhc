# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron: "* */1 * * *" 
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  issues: write  # This line ensures the workflow has permission to create issues

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Make request and capture response
        id: curl_request
        run: |
          response=$(curl -s -o response.txt -w "%{http_code}" curl --location "https://jhomes.to-kousya.or.jp/search/jkknet/service/akiyaJyokenDirect" --header "Content-Type: application/x-www-form-urlencoded" --data-urlencode "redirect=true" --data-urlencode "url=https%3A%2F%2Fjhomes.to-kousya.or.jp%2Fsearch%2Fjkknet%2Fservice%2FakiyaJyokenDirect" --data-urlencode "sen_flg=1" --data-urlencode "jutaku_name=30B330FC30B730E430CF30A430E030DF30C930EA30E830F330C130E830A630E1")
          echo "::set-output name=status_code::$response"
          echo "----------------------"
          ls -al
          # cat response.txt
          echo "::set-output name=body::$(<response.txt)"
  
      - name: Check response
        run: |
          if [[ "${{ steps.curl_request.outputs.status_code }}" == "200" ]]; then
            echo "Request was successful"
            echo "Response body: ${{ steps.curl_request.outputs.body }}"
          else
            echo "Request failed with status ${{ steps.curl_request.outputs.status_code }}"
          fi

          
      - name: Create an Issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/other-template.md
          
